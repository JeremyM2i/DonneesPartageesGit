43+63
106+43+30
106+30
106-23+30
7/3
sqrt(1.2)
sqrt(1.1)
6.72*312900/100000
note=c(18.5,15.75,14.25,19.25,14.25,16.5,13.5,15.75,12.75,14.25)
mean(note)
order(note)
sort(note)
1000/2000
1000000/2000
1000/60/24
1000/60
500*60
1000/30000
2000/60
setwd("C:/Users/Administrateur/Documents/FormationDataScientist/FilRouge/DonneesPartageesGit")
getwd()
library(dplyr)
data_final<- readRDS("data_save.rds")
head(data_final)
data_commune=read.table("DataCommunes.csv",header=T,sep=";",dec=".")
data_commune=read.table("DataCommunes.csv",header=T,sep=";")
data_commune=read.table("DataCommunes.csv",sep=";",na.string="", header=TRUE)
data_commune=read.csv2("DataCommunes.csv",sep=";",na.string="", header=TRUE)
data_region=read.csv2("DataRegions.csv",sep=";",na.string="", header=TRUE)
data_departement=read.csv2("DataDepartements.csv",sep=";",na.string="", header=TRUE)
setwd("C:/Users/Administrateur/Documents/FormationDataScientist/FilRouge/Donnees/CodeCommune")#pathway Windows
#setwd("//home//jeremy//FormationDataScience//FilRouge//Donnees")#Pathway Linux
fichier=read.csv2("geoflar-communes-2016.csv",sep=";",na.string="", header=TRUE,encoding="UTF-8")
names(fichier)
colonneASupp=c(1,2,3,4,7,8,9,10,11,12,15,18,21)
fichier2=fichier[,-colonneASupp]
fichier2
attach(fichier2)
setwd("C:/Users/Administrateur/Documents/FormationDataScientist/FilRouge/DonneesPartageesGit")
setwd("C:/Users/Administrateur/Documents/FormationDataScientist/FilRouge/DonneesPartageesGit")
#setwd("//home//jeremy//FormationDataScience//FilRouge//Donnees")#Pathway Linux
fichier=read.csv2("geoflar-communes-2016.csv",sep=";",na.string="", header=TRUE,encoding="UTF-8")
#setwd("//home//jeremy//FormationDataScience//FilRouge//Donnees")#Pathway Linux
fichier=read.csv2("geoflar-communes-2016.csv",sep=";",na.string="", header=TRUE,encoding="UTF-8")
names(fichier)
colonneASupp=c(1,2,3,4,7,8,9,10,11,12,15,18,21)
fichier2=fichier[,-colonneASupp]
fichier2
attach(fichier2)
########### Densité de pop communes
densitePopCommune=POPULATION/SUPERFICIE
########### Population par region
region=c()
popRegion=c()
for (i in unique(Nom.Reg)){
print(i)
region=c(region,i)
popRegion=c(popRegion,sum(fichier2$POPULATION[fichier2$Nom.Reg==i][!is.na(fichier2$POPULATION[fichier2$Nom.Reg==i])]))
}
########## superficie par region
region=c()
superfRegion=c()
for (i in unique(Nom.Reg)){
print(i)
region=c(region,i)
superfRegion=c(superfRegion,sum(fichier2$SUPERFICIE[fichier2$Nom.Reg==i][!is.na(fichier2$SUPERFICIE[fichier2$Nom.Reg==i])]))
}
########## densité de pop par region
densitePopRegion=popRegion/superfRegion
########## Population par departement
departement=c()
popDep=c()
for (i in unique(Nom.Dept)){
#print(i)
departement=c(departement,i)
popDep=c(popDep,sum(fichier2$POPULATION[fichier2$Nom.Dept==i][!is.na(fichier2$POPULATION[fichier2$Nom.Dept==i])]))
}
########## superficie par departement
departement=c()
superfDep=c()
for (i in unique(Nom.Dept)){
print(i)
departement=c(departement,i)
superfDep=c(superfDep,sum(fichier2$SUPERFICIE[fichier2$Nom.Dept==i][!is.na(fichier2$SUPERFICIE[fichier2$Nom.Dept==i])]))
}
########## densité de pop par departement
densitePopDep=popDep/superfDep
header(fichier2)
head(fichier2)
head(data_final)
o
dfCommune=data.frame(Nom.Com,POPULATION,densitePopCommune,Insee.Com)
dfRegion=data.frame(region,popRegion,densitePopRegion)
dfRegion=dfRegion[-18,]
dfDepartement=data.frame(departement,popDep,densitePopDep)
dfDepartement=dfDepartement[-100,]
dfCommune=data.frame(Nom.Com,POPULATION,densitePopCommune,Insee.Com)
print(dfDepartement)
print(dfRegion)
print(dfDepartement)
head(fichier2)
write.table(dfCommune,"DataCommunes.csv",sep=";",dec=".")
write.table(dfDepartement,"DataDepartements.csv",sep=";",dec=".")
write.table(dfRegion,"DataRegions.csv",sep=";",dec=".")
dfRegion=data.frame(region,popRegion,densitePopRegion)
dfRegion=dfRegion[-18,]
dfDepartement=data.frame(Code.Dept,departement,popDep,densitePopDep)
dfDepartement=dfDepartement[-100,]
dfCommune=data.frame(Insee.Com,Nom.Com,POPULATION,densitePopCommune)
print(dfCommune)
print(dfDepartement)
print(dfRegion)
write.table(dfCommune,"DataCommunes.csv",sep=";",dec=".")
write.table(dfDepartement,"DataDepartements.csv",sep=";",dec=".")
write.table(dfRegion,"DataRegions.csv",sep=";",dec=".")
data_final= readRDS("data_save.rds")
data_commune=read.csv2("DataCommunes.csv",sep=";",na.string="", header=TRUE)
data_region=read.csv2("DataRegions.csv",sep=";",na.string="", header=TRUE)
data_departement=read.csv2("DataDepartements.csv",sep=";",na.string="", header=TRUE)
head(data_commune)
head(data_final)
data_final$Code.commune
j=1
for (i in data_final$Code.commune){
if (length(toString(i))<3 ){data_final$Code.commune[j]=as.integer(paste("0",toString(i)))}
if (length(toString(data_final$Code.commune[j]))<3 ){data_final$Code.commune[j]=as.integer(paste("0",toString(i)))}
j=j+1
}
length(data_final$Code.commune)
j=1
for (i in data_final$Code.commune){
print(j)
if (length(toString(i))<3 ){data_final$Code.commune[j]=as.integer(paste("0",toString(i)))}
if (length(toString(data_final$Code.commune[j]))<3 ){data_final$Code.commune[j]=as.integer(paste("0",toString(i)))}
j=j+1
}
warnings()... =
warnings()
data_final$Code.commune
data_final= readRDS("data_save.rds")
data_final$Code.commune
i=data_final$Code.commune[2]
i
i=data_final$Code.commune[1]
i
toString(i)
length(toString(i))
nchar(toString(i))
nchar(toString(i))<3
j
j=1
if (nchar(toString(i))<3 ){data_final$Code.commune[j]=as.integer(paste("0",toString(i)))}
data_final$Code.commune[j]
data_final= readRDS("data_save.rds")
data_final$Code.commune[j]
as.integer(paste("0",toString(i)))
(paste("0",toString(i))
)
paste("0",toString(i),sep="")
as.integer(paste("0",toString(i),sep=""))
i
j
data_final$Code.commune[j]
if (nchar(toString(i))<3 ){data_final$Code.commune[j]=paste("0",toString(i),sep="")}
data_final$Code.commune[j]
j=1
for (i in data_final$Code.commune){
print(j)
if (nchar(toString(i))<3 ){data_final$Code.commune[j]=paste("0",toString(i),sep="")}
if (nchar(toString(data_final$Code.commune[j]))<3 ){data_final$Code.commune[j]=paste("0",toString(i))}
j=j+1
}
head(data_final$Code.commune)
Insee_com=paste(str(data_final$Code.departement),str(data_final$Code.commune))
Insee_com=cat(str(data_final$Code.departement),str(data_final$Code.commune))
Insee_com
Insee_com=paste(str(data_final$Code.departement),str(data_final$Code.commune))
Insee_com
Insee_com=str(data_final$Code.departement)+str(data_final$Code.commune)
Insee_com
Insee_com=cat(data_final$Code.departement,data_final$Code.commune)
Insee_com=paste(data_final$Code.departement,data_final$Code.commune)
Insee_com
Insee_com=paste(data_final$Code.departement,data_final$Code.commune,sep="")
Insee_com
data_final_2=data.frame(data_final,Insee.com)
data_final_2=data.frame(data_final,Insee_com)
head(data_final_2)
## On colle le code département + le code commune pour avoir le code INSEE
Insee.com=paste(data_final$Code.departement,data_final$Code.commune,sep="")
data_final_2=data.frame(data_final,Insee.com)
head(datacommune)
head(data_commune)
# on fait une jointure
datafinal_3 = left_join(datafinal_2,data_commune,by=Insee.com)
Insee.com
data_final_2=data.frame(data_final,Insee.com)
# on fait une jointure
datafinal_3 = left_join(datafinal_2,data_commune,by=Insee.com)
datafinal_2=data.frame(data_final,Insee.com)
# on fait une jointure
datafinal_3 = left_join(datafinal_2,data_commune,by=Insee.com)
head(datafinal_2)
# on fait une jointure
datafinal_3 = right_join(datafinal_2,data_commune,by=Insee.com)
# on fait une jointure
datafinal_3 = left_join(data_commune,datafinal_2,by=Insee.com)
data_commune$Insee.Com
datafinal_2$Insee.Com
datafinal_2=data.frame(data_final,Insee.com)
## On colle le code département + le code commune pour avoir le code INSEE  dans le tableau a 3M de lignes
Insee.Com=paste(data_final$Code.departement,data_final$Code.commune,sep="")
datafinal_2=data.frame(data_final,Insee.Com)
datafinal_2$Insee.Com
data_commune$Insee.Com
# on fait une jointure
datafinal_3 = left_join(datafinal_2,data_commune,by=Insee.com)
length(data_commune)
length(data_commune$Insee.Com)
length(unique(data_commune$Insee.Com))
is.na(data_commune$Insee.Com)
sum(is.na(data_commune$Insee.Com))
length(unique(data_commune$Insee.Com))
length(data_commune$Insee.Com)
data_commune$Insee.com[duplicated(data_commune$Insee.Com)]
data_commune$Insee.Com[duplicated(data_commune$Insee.Com)]
data_commune=read.csv2("DataCommunes.csv",sep=";",na.string="", header=TRUE)
head(data_commune)
data_commune$Insee.Com
data_final$Insee.Com
j=1
for (i in data_commune$Insee.Com){
while (nchar(data_commune$Insee.Com[j])<5){
data_commune$Insee.Com=paste("0",data_commune$Insee.Com[j],sep="")
}
j=j+1
}
data_commune$Insee.Com
data_commune=read.csv2("DataCommunes.csv",sep=";",na.string="", header=TRUE)
j
data_commune$Insee.Com[1]
data_commune$Insee.Com[35931]
data_commune$Insee.Com[35930]
data_commune$Insee.Com[2]
data_commune$Insee.Com[3]
data_commune$Insee.Com[4]
data_commune$Insee.Com[5]
data_commune$Insee.Com[6]
data_commune$Insee.Com[7]
head(data_commune$Insee.Com,50)
j=1
for (i in data_commune$Insee.Com){
print(i)
while (nchar(data_commune$Insee.Com[j])<5){
data_commune$Insee.Com=paste("0",data_commune$Insee.Com[j],sep="")
}
j=j+1
}
nchar(data_commune$Insee.Com[10])
nchar(data_commune$Insee.Com[11])
head(data_commune$Insee.Com,50)
data_commune=read.csv2("DataCommunes.csv",sep=";",na.string="", header=TRUE)
head(data_commune$Insee.Com,50)
nchar(data_commune$Insee.Com[15])
j=1
for (i in data_commune$Insee.Com){
print(i)
while (nchar(data_commune$Insee.Com[j])<5){
data_commune$Insee.Com[j]=paste("0",data_commune$Insee.Com[j],sep="")
}
j=j+1
}
data_commune$Insee.Com
data_commune
library(dplyr)
setwd("C:/Users/Administrateur/Documents/FormationDataScientist/FilRouge/DonneesPartageesGit")
data_final= readRDS("data_save.rds")
data_commune=read.csv2("DataCommunes.csv",sep=";",na.string="", header=TRUE)
data_region=read.csv2("DataRegions.csv",sep=";",na.string="", header=TRUE)
data_departement=read.csv2("DataDepartements.csv",sep=";",na.string="", header=TRUE)
## Dans le fichier final a 3M de lignes :
#### Les codes communes sont censé avoir 3 chiffres , ex 003 mais ceux en dessous de 100 n'ont que un ou deux chiffres
#donc on rajoute les 0 manquants
j=1
for (i in data_final$Code.commune){
print(j)
if (nchar(toString(i))<3 ){data_final$Code.commune[j]=paste("0",toString(i),sep="")}
if (nchar(toString(data_final$Code.commune[j]))<3 ){data_final$Code.commune[j]=paste("0",toString(i))}
j=j+1
}
## On colle le code département + le code commune pour avoir le code INSEE  dans le tableau a 3M de lignes
Insee.Com=paste(data_final$Code.departement,data_final$Code.commune,sep="")
datafinal_2=data.frame(data_final,Insee.Com)
#### Pareil pour le fichier data_commune, les codes insee sont pas toujours a 5 chiffres
j=1
for (i in data_commune$Insee.Com){
while (nchar(data_commune$Insee.Com[j])<5){
data_commune$Insee.Com[j]=paste("0",data_commune$Insee.Com[j],sep="")
}
j=j+1
}
# on fait une jointure
datafinal_3 = left_join(datafinal_2,data_commune,by=Insee.com)
# on fait une jointure
datafinal_3 = left_join(datafinal_2,data_commune,by=Insee.Com)
sum(duplicated(data_commune$Insee.Com))
# on fait une jointure
datafinal_3 = left_join(datafinal_2,data_commune,by=Insee.Com,copy=TRUE)
